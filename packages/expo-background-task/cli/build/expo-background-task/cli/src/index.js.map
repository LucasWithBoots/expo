{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/index.ts"],"names":[],"mappings":"AAAA,aAAa;AACb,OAAO,EAAE,4BAA4B,EAAE,MAAM,4BAA4B,CAAC;AAE1E,MAAM,CAAC,OAAO,WAAW,GAAoB;IAC3C,IAAI,GAAG,KAAK,MAAM,EAAE,CAAC;QACnB,OAAO,IAAI,OAAO,CAAS,KAAK,EAAE,OAAO,EAAE,EAAE;YAC3C,MAAM,MAAM,GAAG,MAAM,4BAA4B,CAAC,sBAAsB,EAAE,EAAE,CAAC,CAAC;YAC9E,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAC/B,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,8BAA8B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;YACzF,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,MAAM,CAAC,CAAC;YACjE,wCAAwC;YACxC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;SAAM,IAAI,GAAG,KAAK,MAAM,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC1D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,wCAAwC;YACxC,UAAU,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,yCAAyC,CAAC,CAAC;YACrD,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;SAAM,CAAC;QACN,OAAO,OAAO,CAAC,OAAO,CACpB,gFAAgF,CACjF,CAAC;IACJ,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iCAAiC,CACrD,MAAc,EACd,MAA2B;IAE3B,oEAAoE;IACpE,2CAA2C;IAC3C,wCAAwC;IACxC,4CAA4C;IAC5C,mBAAmB;IACnB,8EAA8E;IAC9E,KAAK;IACL,iEAAiE;IACjE,iCAAiC;IACjC,8BAA8B;AAChC,CAAC","sourcesContent":["// @ts-ignore\nimport { getDevToolsPluginClientAsync } from '../../../expo/src/devtools';\n\nexport default function (cmd: 'list' | 'test'): Promise<string> {\n  if (cmd === 'list') {\n    return new Promise<string>(async (resolve) => {\n      const client = await getDevToolsPluginClientAsync('expo-background-task', {});\n      console.log('CLIENT:', client);\n      const result = await client.sendMessage('getRegisteredBackgroundTasks', { from: 'cli' });\n      console.log('Result from getRegisteredBackgroundTasks:', result);\n      // Simulate triggering a background task\n      resolve('1. Task A\\n2. Task B\\n3. Task C');\n    });\n  } else if (cmd === 'test') {\n    console.log('Triggering background tasks for testing...');\n    return new Promise((resolve) => {\n      // Simulate triggering a background task\n      setTimeout(() => {\n        resolve('Background task completed successfully.');\n      }, 1000);\n    });\n  } else {\n    return Promise.resolve(\n      \"Unknown command. Use 'list' to see available tasks or 'trigger' to run a task.\"\n    );\n  }\n}\n\nexport async function sendMessageToDevToolsPluginClient(\n  method: string,\n  params: Record<string, any>\n) {\n  //return await getDevToolsPluginClientAsync('expo-background-task');\n  // const connectionInfo: ConnectionInfo = {\n  //   pluginName: 'expo-background-task',\n  //   protocolVersion: 1, //PROTOCOL_VERSION,\n  //   sender: 'app',\n  //   devServer: 'http://localhost:8081', // Replace with actual dev server URL\n  // };\n  // const client = createDevToolsPluginClient(connectionInfo, {});\n  // console.log('CLIENT', client);\n  // return Promise.resolve('');\n}\n"]}